"use strict";(self.webpackChunkelement_form_pro=self.webpackChunkelement_form_pro||[]).push([[622],{5785:function(n,s,a){a.r(s),a.d(s,{data:function(){return t}});const t={key:"v-dee426ec",path:"/guide/component/custom.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"自定义组件",slug:"自定义组件",children:[]}],filePathRelative:"guide/component/custom.md",git:{updatedTime:1664347095e3,contributors:[{name:"lixiaopan",email:"lixiaopan@jd.com",commits:3}]}}},9102:function(n,s,a){a.r(s),a.d(s,{default:function(){return e}});const t=(0,a(6958).uE)('<h3 id="自定义组件" tabindex="-1"><a class="header-anchor" href="#自定义组件" aria-hidden="true">#</a> 自定义组件</h3><p>SchemaForm 组件提供了便于创建自定义组件的方案，使用 <code>FormMixin</code> 创建你的自定义组件</p><h4 id="创建自定义组件" tabindex="-1"><a class="header-anchor" href="#创建自定义组件" aria-hidden="true">#</a> 创建自定义组件</h4><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code>// @/components/CustomNumber.vue\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input-number</span>\n    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>bindVal<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">v-bind</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>attrsAll<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">v-on</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onEvents<span class="token punctuation">&quot;</span></span>\n  <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> withProps<span class="token punctuation">,</span> useFormMixin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@element-pro/form&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\tname<span class="token operator">:</span> <span class="token string">&#39;CustomNumber&#39;</span><span class="token punctuation">,</span>\n\tprops<span class="token operator">:</span> <span class="token punctuation">{</span>\n\t\t<span class="token operator">...</span><span class="token function">withProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t<span class="token function">setup</span> <span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> <span class="token punctuation">{</span> attrs<span class="token punctuation">,</span> emit <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t<span class="token keyword">const</span> <span class="token punctuation">{</span> bindVal<span class="token punctuation">,</span> attrsAll <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useFormMixin</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> <span class="token punctuation">{</span> attrs<span class="token punctuation">,</span> emit <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\t\t<span class="token keyword">return</span> <span class="token punctuation">{</span> bindVal<span class="token punctuation">,</span> attrsAll <span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h4 id="main-js-全局引入组件" tabindex="-1"><a class="header-anchor" href="#main-js-全局引入组件" aria-hidden="true">#</a> main.js 全局引入组件</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> ElementUI <span class="token keyword">from</span> <span class="token string">&#39;element-ui&#39;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;element-ui/lib/theme-chalk/index.css&#39;</span>\n<span class="token keyword">import</span> SchemaForm <span class="token keyword">from</span> <span class="token string">&#39;@vueblocks/element-schema-form&#39;</span>\n<span class="token keyword">import</span> CustomNumber <span class="token keyword">from</span> <span class="token string">&#39;@/components/CustomNumber.vue&#39;</span>\n\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>ElementUI<span class="token punctuation">)</span>\nVue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>SchemaForm<span class="token punctuation">)</span>\nVue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&#39;CustomNumber&#39;</span><span class="token punctuation">,</span> CustomNumber<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="使用自定义组件" tabindex="-1"><a class="header-anchor" href="#使用自定义组件" aria-hidden="true">#</a> 使用自定义组件</h4>',7),p={};var e=(0,a(496).Z)(p,[["render",function(n,s){return t}]])}}]);